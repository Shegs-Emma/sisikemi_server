syntax = "proto3";
package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";
import "rpc_verify_email.proto";

import "rpc_create_media.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/techschool/simplebank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Sisikemi Fashion API";
      version: "1.2";
      contact: {
        name: "Sisikemi Fashion";
        url: "https://github.com/techschool";
        email: "mightymilan04@gmail.com";
      };
    };
  };

service SisikemiFashion {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this api to create new user";
            summary: "Create new user"
          };
    }
    rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this api to login new user";
            summary: "Login user"
        };
    }
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            post: "/v1/update_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this api to update new user";
            summary: "Update user"
        };
    }
    rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
        option (google.api.http) = {
            get: "/v1/verify_email"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this api to verify new user";
          summary: "Verify email"
        };
    }

    rpc CreateMedia(CreateMediaRequest) returns (CreateMediaResponse) {
        option (google.api.http) = {
            post: "/v1/create_media"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this api to create new media";
            summary: "Create new media"
          };
    }
}