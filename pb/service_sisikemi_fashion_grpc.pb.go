// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.27.3
// source: service_sisikemi_fashion.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SisikemiFashion_CreateUser_FullMethodName        = "/pb.SisikemiFashion/CreateUser"
	SisikemiFashion_LoginUser_FullMethodName         = "/pb.SisikemiFashion/LoginUser"
	SisikemiFashion_UpdateUser_FullMethodName        = "/pb.SisikemiFashion/UpdateUser"
	SisikemiFashion_VerifyEmail_FullMethodName       = "/pb.SisikemiFashion/VerifyEmail"
	SisikemiFashion_CreateMedia_FullMethodName       = "/pb.SisikemiFashion/CreateMedia"
	SisikemiFashion_UploadImage_FullMethodName       = "/pb.SisikemiFashion/UploadImage"
	SisikemiFashion_ListMedia_FullMethodName         = "/pb.SisikemiFashion/ListMedia"
	SisikemiFashion_GetMedia_FullMethodName          = "/pb.SisikemiFashion/GetMedia"
	SisikemiFashion_CreateCollection_FullMethodName  = "/pb.SisikemiFashion/CreateCollection"
	SisikemiFashion_ListCollections_FullMethodName   = "/pb.SisikemiFashion/ListCollections"
	SisikemiFashion_CreateProduct_FullMethodName     = "/pb.SisikemiFashion/CreateProduct"
	SisikemiFashion_ListProducts_FullMethodName      = "/pb.SisikemiFashion/ListProducts"
	SisikemiFashion_GetProduct_FullMethodName        = "/pb.SisikemiFashion/GetProduct"
	SisikemiFashion_CreateCartItem_FullMethodName    = "/pb.SisikemiFashion/CreateCartItem"
	SisikemiFashion_DeleteCartItem_FullMethodName    = "/pb.SisikemiFashion/DeleteCartItem"
	SisikemiFashion_ListUserCartItems_FullMethodName = "/pb.SisikemiFashion/ListUserCartItems"
	SisikemiFashion_UpdateCartItemQty_FullMethodName = "/pb.SisikemiFashion/UpdateCartItemQty"
	SisikemiFashion_UpdateProduct_FullMethodName     = "/pb.SisikemiFashion/UpdateProduct"
	SisikemiFashion_DeleteProduct_FullMethodName     = "/pb.SisikemiFashion/DeleteProduct"
)

// SisikemiFashionClient is the client API for SisikemiFashion service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SisikemiFashionClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error)
	CreateMedia(ctx context.Context, in *CreateMediaRequest, opts ...grpc.CallOption) (*CreateMediaResponse, error)
	UploadImage(ctx context.Context, in *UploadImageRequest, opts ...grpc.CallOption) (*UploadImageResponse, error)
	ListMedia(ctx context.Context, in *ListMediaRequest, opts ...grpc.CallOption) (*ListMediaResponse, error)
	GetMedia(ctx context.Context, in *GetMediaRequest, opts ...grpc.CallOption) (*GetMediaResponse, error)
	CreateCollection(ctx context.Context, in *CreateCollectionRequest, opts ...grpc.CallOption) (*CreateCollectionResponse, error)
	ListCollections(ctx context.Context, in *ListCollectionRequest, opts ...grpc.CallOption) (*ListCollectionResponse, error)
	CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error)
	ListProducts(ctx context.Context, in *ListProductRequest, opts ...grpc.CallOption) (*ListProductResponse, error)
	GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error)
	CreateCartItem(ctx context.Context, in *CreateCartItemRequest, opts ...grpc.CallOption) (*CreateCartItemResponse, error)
	DeleteCartItem(ctx context.Context, in *DeleteCartItemRequest, opts ...grpc.CallOption) (*DeleteCartItemResponse, error)
	ListUserCartItems(ctx context.Context, in *ListUserCartRequest, opts ...grpc.CallOption) (*ListUserCartResponse, error)
	UpdateCartItemQty(ctx context.Context, in *UpdateCartItemQtyRequest, opts ...grpc.CallOption) (*UpdateCartItemQtyResponse, error)
	UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error)
	DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error)
}

type sisikemiFashionClient struct {
	cc grpc.ClientConnInterface
}

func NewSisikemiFashionClient(cc grpc.ClientConnInterface) SisikemiFashionClient {
	return &sisikemiFashionClient{cc}
}

func (c *sisikemiFashionClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_CreateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LoginUserResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_LoginUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_UpdateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(VerifyEmailResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_VerifyEmail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) CreateMedia(ctx context.Context, in *CreateMediaRequest, opts ...grpc.CallOption) (*CreateMediaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateMediaResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_CreateMedia_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) UploadImage(ctx context.Context, in *UploadImageRequest, opts ...grpc.CallOption) (*UploadImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UploadImageResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_UploadImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) ListMedia(ctx context.Context, in *ListMediaRequest, opts ...grpc.CallOption) (*ListMediaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListMediaResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_ListMedia_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) GetMedia(ctx context.Context, in *GetMediaRequest, opts ...grpc.CallOption) (*GetMediaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetMediaResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_GetMedia_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) CreateCollection(ctx context.Context, in *CreateCollectionRequest, opts ...grpc.CallOption) (*CreateCollectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateCollectionResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_CreateCollection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) ListCollections(ctx context.Context, in *ListCollectionRequest, opts ...grpc.CallOption) (*ListCollectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCollectionResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_ListCollections_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProductResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_CreateProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) ListProducts(ctx context.Context, in *ListProductRequest, opts ...grpc.CallOption) (*ListProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListProductResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_ListProducts_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetProductResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_GetProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) CreateCartItem(ctx context.Context, in *CreateCartItemRequest, opts ...grpc.CallOption) (*CreateCartItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateCartItemResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_CreateCartItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) DeleteCartItem(ctx context.Context, in *DeleteCartItemRequest, opts ...grpc.CallOption) (*DeleteCartItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteCartItemResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_DeleteCartItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) ListUserCartItems(ctx context.Context, in *ListUserCartRequest, opts ...grpc.CallOption) (*ListUserCartResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListUserCartResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_ListUserCartItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) UpdateCartItemQty(ctx context.Context, in *UpdateCartItemQtyRequest, opts ...grpc.CallOption) (*UpdateCartItemQtyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateCartItemQtyResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_UpdateCartItemQty_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateProductResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_UpdateProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sisikemiFashionClient) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteProductResponse)
	err := c.cc.Invoke(ctx, SisikemiFashion_DeleteProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SisikemiFashionServer is the server API for SisikemiFashion service.
// All implementations must embed UnimplementedSisikemiFashionServer
// for forward compatibility.
type SisikemiFashionServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	VerifyEmail(context.Context, *VerifyEmailRequest) (*VerifyEmailResponse, error)
	CreateMedia(context.Context, *CreateMediaRequest) (*CreateMediaResponse, error)
	UploadImage(context.Context, *UploadImageRequest) (*UploadImageResponse, error)
	ListMedia(context.Context, *ListMediaRequest) (*ListMediaResponse, error)
	GetMedia(context.Context, *GetMediaRequest) (*GetMediaResponse, error)
	CreateCollection(context.Context, *CreateCollectionRequest) (*CreateCollectionResponse, error)
	ListCollections(context.Context, *ListCollectionRequest) (*ListCollectionResponse, error)
	CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error)
	ListProducts(context.Context, *ListProductRequest) (*ListProductResponse, error)
	GetProduct(context.Context, *GetProductRequest) (*GetProductResponse, error)
	CreateCartItem(context.Context, *CreateCartItemRequest) (*CreateCartItemResponse, error)
	DeleteCartItem(context.Context, *DeleteCartItemRequest) (*DeleteCartItemResponse, error)
	ListUserCartItems(context.Context, *ListUserCartRequest) (*ListUserCartResponse, error)
	UpdateCartItemQty(context.Context, *UpdateCartItemQtyRequest) (*UpdateCartItemQtyResponse, error)
	UpdateProduct(context.Context, *UpdateProductRequest) (*UpdateProductResponse, error)
	DeleteProduct(context.Context, *DeleteProductRequest) (*DeleteProductResponse, error)
	mustEmbedUnimplementedSisikemiFashionServer()
}

// UnimplementedSisikemiFashionServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSisikemiFashionServer struct{}

func (UnimplementedSisikemiFashionServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedSisikemiFashionServer) LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (UnimplementedSisikemiFashionServer) UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (UnimplementedSisikemiFashionServer) VerifyEmail(context.Context, *VerifyEmailRequest) (*VerifyEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyEmail not implemented")
}
func (UnimplementedSisikemiFashionServer) CreateMedia(context.Context, *CreateMediaRequest) (*CreateMediaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMedia not implemented")
}
func (UnimplementedSisikemiFashionServer) UploadImage(context.Context, *UploadImageRequest) (*UploadImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadImage not implemented")
}
func (UnimplementedSisikemiFashionServer) ListMedia(context.Context, *ListMediaRequest) (*ListMediaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMedia not implemented")
}
func (UnimplementedSisikemiFashionServer) GetMedia(context.Context, *GetMediaRequest) (*GetMediaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMedia not implemented")
}
func (UnimplementedSisikemiFashionServer) CreateCollection(context.Context, *CreateCollectionRequest) (*CreateCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCollection not implemented")
}
func (UnimplementedSisikemiFashionServer) ListCollections(context.Context, *ListCollectionRequest) (*ListCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCollections not implemented")
}
func (UnimplementedSisikemiFashionServer) CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProduct not implemented")
}
func (UnimplementedSisikemiFashionServer) ListProducts(context.Context, *ListProductRequest) (*ListProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProducts not implemented")
}
func (UnimplementedSisikemiFashionServer) GetProduct(context.Context, *GetProductRequest) (*GetProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
}
func (UnimplementedSisikemiFashionServer) CreateCartItem(context.Context, *CreateCartItemRequest) (*CreateCartItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCartItem not implemented")
}
func (UnimplementedSisikemiFashionServer) DeleteCartItem(context.Context, *DeleteCartItemRequest) (*DeleteCartItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCartItem not implemented")
}
func (UnimplementedSisikemiFashionServer) ListUserCartItems(context.Context, *ListUserCartRequest) (*ListUserCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUserCartItems not implemented")
}
func (UnimplementedSisikemiFashionServer) UpdateCartItemQty(context.Context, *UpdateCartItemQtyRequest) (*UpdateCartItemQtyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCartItemQty not implemented")
}
func (UnimplementedSisikemiFashionServer) UpdateProduct(context.Context, *UpdateProductRequest) (*UpdateProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProduct not implemented")
}
func (UnimplementedSisikemiFashionServer) DeleteProduct(context.Context, *DeleteProductRequest) (*DeleteProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProduct not implemented")
}
func (UnimplementedSisikemiFashionServer) mustEmbedUnimplementedSisikemiFashionServer() {}
func (UnimplementedSisikemiFashionServer) testEmbeddedByValue()                         {}

// UnsafeSisikemiFashionServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SisikemiFashionServer will
// result in compilation errors.
type UnsafeSisikemiFashionServer interface {
	mustEmbedUnimplementedSisikemiFashionServer()
}

func RegisterSisikemiFashionServer(s grpc.ServiceRegistrar, srv SisikemiFashionServer) {
	// If the following call pancis, it indicates UnimplementedSisikemiFashionServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SisikemiFashion_ServiceDesc, srv)
}

func _SisikemiFashion_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_LoginUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_UpdateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_VerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).VerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_VerifyEmail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).VerifyEmail(ctx, req.(*VerifyEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_CreateMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMediaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).CreateMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_CreateMedia_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).CreateMedia(ctx, req.(*CreateMediaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_UploadImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).UploadImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_UploadImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).UploadImage(ctx, req.(*UploadImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_ListMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMediaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).ListMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_ListMedia_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).ListMedia(ctx, req.(*ListMediaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_GetMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMediaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).GetMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_GetMedia_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).GetMedia(ctx, req.(*GetMediaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_CreateCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).CreateCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_CreateCollection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).CreateCollection(ctx, req.(*CreateCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_ListCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).ListCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_ListCollections_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).ListCollections(ctx, req.(*ListCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_CreateProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).CreateProduct(ctx, req.(*CreateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_ListProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).ListProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_ListProducts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).ListProducts(ctx, req.(*ListProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_GetProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).GetProduct(ctx, req.(*GetProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_CreateCartItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCartItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).CreateCartItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_CreateCartItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).CreateCartItem(ctx, req.(*CreateCartItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_DeleteCartItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCartItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).DeleteCartItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_DeleteCartItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).DeleteCartItem(ctx, req.(*DeleteCartItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_ListUserCartItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).ListUserCartItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_ListUserCartItems_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).ListUserCartItems(ctx, req.(*ListUserCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_UpdateCartItemQty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCartItemQtyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).UpdateCartItemQty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_UpdateCartItemQty_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).UpdateCartItemQty(ctx, req.(*UpdateCartItemQtyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_UpdateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).UpdateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_UpdateProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).UpdateProduct(ctx, req.(*UpdateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SisikemiFashion_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SisikemiFashionServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SisikemiFashion_DeleteProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SisikemiFashionServer).DeleteProduct(ctx, req.(*DeleteProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SisikemiFashion_ServiceDesc is the grpc.ServiceDesc for SisikemiFashion service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SisikemiFashion_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SisikemiFashion",
	HandlerType: (*SisikemiFashionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _SisikemiFashion_CreateUser_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _SisikemiFashion_LoginUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _SisikemiFashion_UpdateUser_Handler,
		},
		{
			MethodName: "VerifyEmail",
			Handler:    _SisikemiFashion_VerifyEmail_Handler,
		},
		{
			MethodName: "CreateMedia",
			Handler:    _SisikemiFashion_CreateMedia_Handler,
		},
		{
			MethodName: "UploadImage",
			Handler:    _SisikemiFashion_UploadImage_Handler,
		},
		{
			MethodName: "ListMedia",
			Handler:    _SisikemiFashion_ListMedia_Handler,
		},
		{
			MethodName: "GetMedia",
			Handler:    _SisikemiFashion_GetMedia_Handler,
		},
		{
			MethodName: "CreateCollection",
			Handler:    _SisikemiFashion_CreateCollection_Handler,
		},
		{
			MethodName: "ListCollections",
			Handler:    _SisikemiFashion_ListCollections_Handler,
		},
		{
			MethodName: "CreateProduct",
			Handler:    _SisikemiFashion_CreateProduct_Handler,
		},
		{
			MethodName: "ListProducts",
			Handler:    _SisikemiFashion_ListProducts_Handler,
		},
		{
			MethodName: "GetProduct",
			Handler:    _SisikemiFashion_GetProduct_Handler,
		},
		{
			MethodName: "CreateCartItem",
			Handler:    _SisikemiFashion_CreateCartItem_Handler,
		},
		{
			MethodName: "DeleteCartItem",
			Handler:    _SisikemiFashion_DeleteCartItem_Handler,
		},
		{
			MethodName: "ListUserCartItems",
			Handler:    _SisikemiFashion_ListUserCartItems_Handler,
		},
		{
			MethodName: "UpdateCartItemQty",
			Handler:    _SisikemiFashion_UpdateCartItemQty_Handler,
		},
		{
			MethodName: "UpdateProduct",
			Handler:    _SisikemiFashion_UpdateProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _SisikemiFashion_DeleteProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_sisikemi_fashion.proto",
}
