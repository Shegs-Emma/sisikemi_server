// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: media.sql

package db

import (
	"context"
)

const createMedia = `-- name: CreateMedia :one
INSERT INTO media (
    media_ref, url, aws_id
) VALUES (
    $1, $2, $3
)
RETURNING id, media_ref, url, aws_id, created_at
`

type CreateMediaParams struct {
	MediaRef string `json:"media_ref"`
	Url      string `json:"url"`
	AwsID    string `json:"aws_id"`
}

func (q *Queries) CreateMedia(ctx context.Context, arg CreateMediaParams) (Medium, error) {
	row := q.db.QueryRow(ctx, createMedia, arg.MediaRef, arg.Url, arg.AwsID)
	var i Medium
	err := row.Scan(
		&i.ID,
		&i.MediaRef,
		&i.Url,
		&i.AwsID,
		&i.CreatedAt,
	)
	return i, err
}

const getMedia = `-- name: GetMedia :one
SELECT id, media_ref, url, aws_id, created_at FROM media
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetMedia(ctx context.Context, id int64) (Medium, error) {
	row := q.db.QueryRow(ctx, getMedia, id)
	var i Medium
	err := row.Scan(
		&i.ID,
		&i.MediaRef,
		&i.Url,
		&i.AwsID,
		&i.CreatedAt,
	)
	return i, err
}
